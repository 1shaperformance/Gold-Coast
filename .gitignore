mtarget/
pom.xml.tag
pom.xml.releaseBackup
pom.xml.versionsBackup
pom.xml.next
release.properties
dependency-reduced-pom.xml
buildNumber.properties
.mvn/timing.properties
# https://github.com/takari/maven-wrapper#usage-without-binary-jar
.mvn/wrapper/maven-wrapper.jar

# Eclipse m2e generated files
# Eclipse Core
.project
# JDT-specific (Eclipse Java Development Tools)
.classpath

flutterfire configure --project=gold-mode-410402

import 'package:firebase_corefirebase_core.dart';
import 'firebase_options.dart';



flutterfire configure --project=gold-mode-410402

dependencies {
    // Import the BoM for the Firebase platform
    implementation(platform("com.google.firebase:firebase-bom:32.7.1"))

    // Add the dependency for the Firebase Authentication library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation("com.google.firebase:firebase-auth")
}
dependencies {
    // Add the dependency for the Firebase Authentication library
    // When NOT using the BoM, you must specify versions in Firebase library dependencies
    implementation("com.google.firebase:firebase-auth:22.3.1")
}
dependencies {
  // ...

  // Import the Firebase BoM
  implementation(platform("com.google.firebase:firebase-bom:32.7.1"))

  // Using KTX libraries for Authentication and Cloud Firestore
  implementation("com.google.firebase:firebase-auth-ktx")
  implementation("com.google.firebase:firebase-firestore-ktx")
}
dependencies {
  // ...

  // Import the Firebase BoM as usual
  // Make sure to use Firebase BoM v32.5.0 or higher
  implementation(platform("com.google.firebase:firebase-bom:32.7.1"))

  // No need to use the KTX libraries, everything is now in the main module
  implementation("com.google.firebase:firebase-auth")
  implementation("com.google.firebase:firebase-firestore") 
} 

       </ignoreVersions> 
      </rule> 
 
 
     <!-- Apache Beam versions past 2.3.0 cause dataflow/spanner errors. --> 
     <rule groupId="org.apache.beam" artifactId="beam-sdks-java-core" comparisonMethod="maven"> 
       <ignoreVersions> 
         <ignoreVersion type="regex">.*</ignoreVersion> 
       </ignoreVersions> 
     </rule> 
  
      <!-- SendGrid 3 libraries are broken in App Engine standard environment --> 
      <rule groupId="com.sendgrid" artifactId="sendgrid-java" comparisonMethod="maven"> 
        <ignoreVersions>
pip install Flask==3.0.2
$ pip install -U Flask
# save this as app.py
from flask import Flask

app = Flask(__name__)

@app.route("/")
def hello():
    return "Hello, World!"


name: Android CI

on:
  - pull_request
  - push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: 17
    - name: Check Snippets
      run: python scripts/checksnippets.py
    - name: Install NDK
      run: echo "y" | sudo ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager --install "ndk;21.0.6113669" --sdk_root=${ANDROID_SDK_ROOT}
    - name: Build with Gradle (Pull Request)
      run: ./build_pull_request.sh
      if: github.event_name == 'pull_request'
    - name: Build with Gradle (Push)
      run: ./gradlew clean ktlint build
      if: github.event_name != 'pull_request'
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android">

    <application
            android:allowBackup="true"
            android:icon="@mipmap/ic_launcher"
            android:label="@string/app_name"
            android:supportsRtl="true"
            android:theme="@style/AppTheme">
        <activity android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>

                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>
        <activity android:name=".kotlin.MainActivity"/>
    </application>

</manifest>

         }); 
          // [END count_aggregate_query] 
      } 
  
     public void orQuery() { 
         CollectionReference collection = db.collection("cities"); 
         // [START or_queries] 
         Query query = collection.where(Filter.and( 
             Filter.equalTo("state", "CA"), 
             Filter.or( 
                 Filter.equalTo("capital", true), 
                 Filter.greaterThanOrEqualTo("population", 1000000) 
             ) 
         )); 
         // [END or_queries] 
     } 
  
     public void orQueryDisjunctions() { 
         CollectionReference collection = db.collection("cities"); 
  
         // [START one_disjunction] 
         collection.whereEqualTo("a", 1); 
         // [END one_disjunction] 
  
         // [START two_disjunctions] 
         collection.where(Filter.or( 
             Filter.equalTo("a", 1), 
             Filter.equalTo("b", 2) 
         )); 
         // [END two_disjunctions] 
  
         // [START four_disjunctions] 
         collection.where(Filter.or( 
             Filter.and( 
                 Filter.equalTo("a", 1), 
                 Filter.equalTo("c", 3) 
             ), 
             Filter.and( 
                 Filter.equalTo("a", 1), 
                 Filter.equalTo("d", 4) 
             ), 
             Filter.and( 
                 Filter.equalTo("b", 2), 
                 Filter.equalTo("c", 3) 
             ), 
             Filter.and( 
                 Filter.equalTo("b", 2), 
                 Filter.equalTo("d", 4) 
             ) 
         )); 
         // [END four_disjunctions] 
  
         // [START four_disjunctions_compact] 
         collection.where(Filter.and( 
             Filter.or( 
                 Filter.equalTo("a", 1), 
                 Filter.equalTo("b", 2) 
             ), 
             Filter.or( 
                 Filter.equalTo("c", 3), 
                 Filter.equalTo("d", 4) 
             ) 
         )); 
         // [END four_disjunctions_compact] 
  
         // [START 20_disjunctions] 
         collection.where(Filter.or( 
             Filter.inArray("a", Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)), 
             Filter.inArray("b", Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)), 
         )); 
         // [END 20_disjunctions] 
  
         // [START 10_disjunctions] 
         collection.where(Filter.and( 
             Filter.inArray("a", Arrays.asList(1, 2, 3, 4, 5)), 
             Filter.or( 
                 Filter.equalTo("b", 2), 
                 Filter.equalTo("c", 3) 
             ) 
         )); 
         // [END 10_disjunctions] 
     } 
  
     public void illegalDisjunctions() { 
         // [START 50_disjunctions] 
         collection.where(Filter.and( 
             Filter.inArray("a", Arrays.asList(1, 2, 3, 4, 5)), 
             Filter.inArray("b", Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)), 
         )); 
         // [END 50_disjunctions]
     }


<!-- Global tag (gtag.js) -->

Das Ende ist:

</script>

# Get `depot_tools` in $PATH if you don't have it
git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git $HOME/src/depot_tools
export PATH="$PATH:$HOME/src/depot_tools"

# Check out the recipe engine repo
git clone https://chromium.googlesource.com/infra/luci/recipes-py $HOME/src/recipes-py

# make your change
cd $HOME/src/recipes-py
git new-branch cool_feature
# hack hack
git commit -a -m "This is awesome"

# This will ask for your Google Account credentials.
git cl upload -s -r joe@example.com
# Wait for approval over email.
# Click "Submit to CQ" button or ask reviewer to do it for you.
# Wait for the change to be tested and landed automatically.

# Contributing

We'd love for you to contribute to our source code and to make it even better than it is today! Here are the guidelines we'd like you to follow:

 - [Code of Conduct](#coc)
 - [Question or Problem?](#question)
 - [Issues and Bugs](#issue)
 - [Submission Guidelines](#submit)
 - [Coding Rules](#rules)
 - [Signing the CLA](#cla)

## <a name="coc"></a> Code of Conduct

As contributors and maintainers of the project, we pledge to respect everyone who contributes by posting issues, updating documentation, submitting pull requests, providing feedback in comments, and any other activities.

Communication through any of Firebase's channels (GitHub, StackOverflow, Google+, Twitter, etc.) must be constructive and never resort to personal attacks, trolling, public or private harassment, insults, or other unprofessional conduct.

We promise to extend courtesy and respect to everyone involved in this project regardless of gender, gender identity, sexual orientation, disability, age, race, ethnicity, religion, or level of experience. We expect anyone contributing to the project to do the same.

If any member of the community violates this code of conduct, the maintainers of the project may take action, removing issues, comments, and PRs or blocking accounts as deemed appropriate.

If you are subject to or witness unacceptable behavior, or have any other concerns, please drop us a line at nivco@google.com.

## <a name="question"></a> Got a Question or Problem?

If you have questions about how to use the project, please direct these to [StackOverflow][stackoverflow] and use the `firebase` tag. We are also available on GitHub issues.

If you feel that we're missing an important bit of documentation, feel free to
file an issue so we can help. Here's an example to get you started:

```
What are you trying to do or find out more about?

Where have you looked?

Where did you expect to find this information?
```

## <a name="issue"></a> Found an Issue?

If you find a bug in the source code or a mistake in the documentation, you can help us by
submitting an issue on this repository. Even better you can submit a Pull Request
with a fix.

See [below](#submit) for some guidelines.

## <a name="submit"></a> Submission Guidelines

### Submitting an Issue

Before you submit your issue search the archive, maybe your question was already answered.

If your issue appears to be a bug, and hasn't been reported, open a new issue.
Help us to maximize the effort we can spend fixing issues and adding new
features, by not reporting duplicate issues.  Providing the following information will increase the
chances of your issue being dealt with quickly:

* **Overview of the Issue** - if an error is being thrown a non-minified stack trace helps
* **Motivation for or Use Case** - explain why this is a bug for you
* **Browsers and Operating System** - is this a problem with all browsers or only IE9?
* **Reproduce the Error** - provide a live example or an unambiguous set of steps.
* **Related Issues** - has a similar issue been reported before?
* **Suggest a Fix** - if you can't fix the bug yourself, perhaps you can point to what might be
  causing the problem (line of code or commit)

**If you get help, help others. Good karma rulez!**

Here's a template to get you started:

```
System information (OS, Device, etc):

What steps will reproduce the problem:
1.
2.
3.

What is the expected result?

What happens instead of that?

Code, logs, or screenshot that illustrate the problem:
```

### Submitting a Pull Request
Before you submit your pull request consider the following guidelines:

* Search for an open or closed Pull Request
  that relates to your submission. You don't want to duplicate effort.
* Please sign our [Contributor License Agreement (CLA)](#cla) before
  sending pull requests. We cannot accept code without this.
* Make your changes in a new git branch:

     ```shell
     git checkout -b my-fix-branch master
     ```

* Create your patch, **including appropriate test cases**.
* Follow our [Coding Rules](#rules).
* Commit your changes using a descriptive commit message.

     ```shell
     git commit -a
     ```
  Note: the optional commit `-a` command line option will automatically "add" and "rm" edited files.

* Build your changes locally to ensure all the tests pass:

    ```shell
   gulp
    ```

* Push your branch to GitHub:

    ```shell
    git push origin my-fix-branch
    ```

* In GitHub, send a pull request to `master`.
* If we suggest changes then:
  * Make the required updates.
  * Rebase your branch and force push to your GitHub repository (this will update your Pull Request):

    ```shell
    git rebase master -i
    git push origin my-fix-branch -f
    ```

That's it! Thank you for your contribution!

#### After your pull request is merged

After your pull request is merged, you can safely delete your branch and pull the changes
from the main (upstream) repository:

* Delete the remote branch on GitHub either through the GitHub UI or your local shell as follows:

    ```shell
    git push origin --delete my-fix-branch
    ```

* Check out the master branch:

    ```shell
    git checkout master -f
    ```

* Delete the local branch:

    ```shell
    git branch -D my-fix-branch
    ```

* Update your master with the latest upstream version:

    ```shell
    git pull --ff upstream master
    ```

## <a name="rules"></a> Coding Rules

We generally follow [Google's style guides][style-guide].

## <a name="cla"></a> Signing the CLA

Please sign our [Contributor License Agreement][google-cla] (CLA) before sending pull requests. For any code
changes to be accepted, the CLA must be signed. It's a quick process, we promise!

*This guide was inspired by the [AngularJS contribution guidelines](https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md).*

[google-cla]: https://cla.developers.google.com
[style-guide]: http://google.github.io/styleguide/
[stackoverflow]: http://stackoverflow.com/questions/tagged/firebase 

#!/usr/bin/env node
import fs from "fs-extra";
import yargs from "yargs/yargs";
import { hideBin } from "yargs/helpers";
import { RewritingStream } from 'parse5-html-rewriting-stream';
import ss from "stream-string";

const snippetHolder = [`<iframe hidden name=htmz onload="setTimeout(()=>document.querySelector(contentWindow.location.hash||null)?.replaceWith(...contentDocument.body.childNodes))"></iframe>`];

const args = yargs(hideBin(process.argv))
  .scriptName("npx htmzify")
  .example("npx htmzify src/index.html")
  .command("$0 <path>", "Installs htmz into an HTML file", (yargs) => yargs
    .positional("path", {
      type: "string",
      desc: "Path to the HTML file"
    })
    .option("nobak", {
      type: "boolean",
      desc: "Do not make a backup copy"
    })
  )
  .parse()

const filePath = args.path;

let cancel = false;
let prevIndent = "";
let prevPrevIndent = "";
const rewriter = new RewritingStream();

rewriter.on("startTag", (startTag) => {
  if (startTag.tagName === "iframe" && startTag.attrs.find(attr => attr.name === "name" && attr.value === "htmz")) {
    cancel = true;
    rewriter.stop();
  }
  rewriter.emitStartTag(startTag);
});

rewriter.on("text", (_, text) => {
  const indents = [...text.matchAll(/[\n\r](\s*)/g)];
  if (indents.length > 0) {
    prevPrevIndent = prevIndent;
    prevIndent = indents[indents.length - 1][1];
  }
  rewriter.emitRaw(text);
});

rewriter.on("endTag", (endTag) => {
  if (snippetHolder.length && (endTag.tagName === "html" || endTag.tagName === "body")) {
    rewriter.emitRaw(formatSnippet(snippetHolder.pop()));
  }
  rewriter.emitEndTag(endTag);
});

function formatSnippet(snippet) {
  return prevPrevIndent.slice(prevIndent.length) + snippet + "\n" + prevIndent;
}

const readStream = fs.createReadStream(filePath, { encoding: "utf-8" });
let transformed = await ss(readStream.pipe(rewriter));

if (cancel) process.exit(0);

if (snippetHolder.length) {
  transformed += formatSnippet(snippetHolder.pop());
}

if (!args.nobak) fs.moveSync(filePath, filePath + ".bak", { overwrite: true });
fs.writeFileSync(filePath, transformed);